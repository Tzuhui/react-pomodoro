{"version":3,"sources":["components/Todo/Todo.js","view/ToDo/TodoList.js","view/CountDown/CountDown.js","view/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","active","type","id","checked","data","onChange","handler","htmlFor","text","data-id","onClick","startCount","class","TodoList","todos","useState","filterType","setFilterType","inputValue","setInputValue","displayData","useMemo","filter","todo","placeholder","value","event","target","onAddTodoItem","role","aria-label","nodeName","onStartCount","dataset","map","key","onStateChange","nowItem","length","CountDown","defaulTime","time","setTime","circleDasharray","setCircleDasharray","timerStatus","setTimerStatus","canRest","setCanRest","timeRef","useRef","useEffect","toFixed","complete","timePause","resetTime","displayConvert","minute","Math","floor","second","clearInterval","current","viewBox","xmlns","cx","cy","r","strokeDasharray","d","href","e","preventDefault","reStart","setInterval","t","alert","Home","setTodos","tempItem","setTempItem","todosList","index","findIndex","parseInt","todoLength","filteredData","item","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.142667dd.chunk.js","sourcesContent":["export default function Todo(props) {\n  return (\n    <li className={\"list-group-item d-flex justify-content-between align-items-center\" + (props.active ? \" bg-primary\" : \"\")}>\n      <div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"checkbox\"\n          id={props.id} checked={props.data.active}\n          onChange={props.handler} />\n        <label className=\"form-check-label\" htmlFor={props.id}>\n          {props.data.text}\n        </label>\n      </div>\n      <button className={'btn ' + (props.active ? ' btn-secondary' : ' btn-primary') + (props.data.active ? ' d-none' : '')} data-id={props.id} onClick={props.startCount}><i data-id={props.id} class=\"far fa-play-circle\"></i></button>\n    </li>\n  );\n}","import React, { useState, useMemo } from 'react';\nimport Todo from '../../components/Todo/Todo';\n\nconst TodoList = (props) => {\n  const todos = props.todos;\n  const [filterType, setFilterType] = useState('all');\n\n  const [inputValue, setInputValue] = useState('');\n  function handleChange(event) {\n    setInputValue(event.target.value);\n  }\n\n  function checkActiveItem(event) {\n    const target = event.target.nodeName;\n    if (target === 'BUTTON' || target === 'I') {\n      props.onStartCount(event.target.dataset.id);\n    }\n  }\n  function addTodo() {\n    if (inputValue !== '') {\n      props.onAddTodoItem(inputValue);\n      setInputValue('');\n    }\n  }\n\n  const displayData = useMemo(() => {\n    if (filterType !== 'all') {\n      if (filterType === 'completed') {\n        return todos.filter(todo => todo.active)\n      } else {\n        return todos.filter(todo => !todo.active)\n      }\n    } else {\n      return todos\n    }\n  }, [filterType, todos]);\n\n  return (\n    <div className=\"py-md-5 py-3 px-md-4 w-100\">\n      <h2 className=\"text-primary h1\">Task List</h2>\n      <div className=\"input-group mt-md-5 mt-3\">\n        <input type=\"text\" className=\"form-control\" placeholder=\"新增 Todo\" value={inputValue} onChange={handleChange} />\n        <button className=\"btn btn-primary\" type=\"button\" id=\"button-addon2\" onClick={() => addTodo()}>Add</button>\n      </div>\n      <div className=\"btn-group mb-3 mt-md-5 mt-3\" role=\"group\" aria-label=\"Basic outlined example\">\n        <button type=\"button\"\n          className={'btn btn-outline-primary ' + (filterType === \"all\" ? \"active\" : \"\")}\n          onClick={() => setFilterType('all')}>全部</button>\n        <button type=\"button\"\n          className={'btn btn-outline-primary ' + (filterType === \"left\" ? \"active\" : \"\")}\n          onClick={() => setFilterType('left')}>未完成</button>\n        <button type=\"button\"\n          className={'btn btn-outline-primary ' + (filterType === \"completed\" ? \"active\" : \"\")}\n          onClick={() => setFilterType('completed')}>完成</button>\n      </div>\n      <ul className=\"list-group\" onClick={checkActiveItem}>\n        {displayData.map((value, key) => {\n          return <Todo data={value} id={value.id} key={key} handler={props.onStateChange} active={props.nowItem.id === value.id} />\n        })}\n      </ul>\n      <p className=\"mt-3 text-primary text-right\"> 共有 {todos.length} 項任務</p>\n    </div>\n  );\n}\n\nexport default TodoList;","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport './styles.css'\n\nconst CountDown = (props) => {\n  const [defaulTime] = useState(60);\n  const [time, setTime] = useState(60);\n  let [circleDasharray, setCircleDasharray] = useState(`283 283`)\n  const [timerStatus, setTimerStatus] = useState(false);\n  const [canRest, setCanRest] = useState(false);\n  const timeRef = useRef({});\n\n  useEffect(() => {\n    setCircleDasharray(`${(\n      (time / defaulTime) * 283\n    ).toFixed(2)} 283`);\n    if (time === 0) {\n      props.complete(props.nowItem.id);\n      setCanRest(true);\n      timePause();\n      resetTime();\n    }\n  }, [time, defaulTime, props]);\n\n  const timeStart = (e) => {\n    e.preventDefault();\n    if (props.nowItem.id === 0) {\n      alert('請先選擇一個待辦事項');\n      return;\n    }\n    if (timerStatus === true || time === 0) {\n      return;\n    }\n    setTimerStatus(true);\n    timeRef.current = setInterval(() => {\n      setTime(t => t - 1);\n    }, 1000);\n  };\n  const displayConvert = useMemo(() => {\n    const minute = Math.floor(time / 60);\n    const second = time - minute*60;\n    return `${(\"\" + minute).length === 1 ? \"0\" + minute : minute}:${\n      (\"\" + second).length === 1 ? \"0\" + second : second\n    }`;\n  }, [time]);\n\n  const reStart = (e) => {\n    e.preventDefault();\n    setCanRest(false);\n    props.reStart();\n  }\n\n  const resetTime = () => {\n    setTimerStatus(false);\n    clearInterval(timeRef.current);\n    setCircleDasharray(`283 283`)\n    setTime(60);\n  };\n  const timePause = () => {\n    setTimerStatus(false);\n    clearInterval(timeRef.current);\n  };\n\n  useEffect(() => {\n    resetTime();\n  }, [props.nowItem.id]);\n\n  return (\n    <div class=\"h-100\">\n      <div className=\"d-flex flex-column align-items-center justify-content-center h-100\">\n        <h4 className=\"mb-md-5 mb-3 text-primary text-decoration-underline\"> {props.nowItem.text} </h4>\n        <div className=\"base-timer\">\n          <svg className=\"base-timer__svg\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g className=\"base-timer__circle\">\n              <circle className=\"base-timer__path-elapsed\" cx=\"50\" cy=\"50\" r=\"45\" />\n              <path\n                id=\"base-timer-path-remaining\"\n                strokeDasharray={circleDasharray}\n                className=\"base-timer__path-remaining text-primary\"\n                d=\"\n              M 50, 50\n              m -45, 0\n              a 45,45 0 1,0 90,0\n              a 45,45 0 1,0 -90,0\n            \"\n              ></path>\n            </g>\n          </svg>\n          <p id=\"base-timer-label\" className=\"base-timer__label\">\n            {canRest?\n              <div className=\"rest-text\">\n                <p className=\"text-white\"> 完成 {props.nowItem.text} ！<br/> 休息 5 分鐘後再繼續努力 <i class=\"far fa-smile\"></i> </p>\n                <a href=\"/\" onClick={reStart}><i class=\"fas fa-history\"></i></a>\n              </div>\n              : \n              <div className=\"time-text\">\n                {timerStatus?\n                  <p> {displayConvert} </p>:\n                  <a href=\"/\" onClick={timeStart}><i class=\"far fa-play-circle\"></i></a>\n                }\n              </div>\n            }\n\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CountDown;","import React, { useState } from 'react';\nimport Todo from \"../../view/ToDo/TodoList\";\nimport CountDown from \"../../view/CountDown/CountDown\";\n\nconst Home = () => {\n  const [todos, setTodos] = useState([\n    { id: 1, text: 'Write Some Code', active: false },\n    { id: 2, text: 'Running', active: false },\n    { id: 3, text: 'Play Baskebtall', active: false },\n  ])\n  const [tempItem, setTempItem] = useState({\n    id: 0,\n    text: '請先選擇一個待辦事項',\n    active: false,\n  })\n\n  const addTodo = (value) => {\n    const todoLength = todos.length;\n    setTodos([...todos, {\n      id: todoLength + 1,\n      text: value,\n      active: false\n    }])\n  }\n\n  const finishTodo = (id) => {\n    let todosList = todos;\n    const index = todos.findIndex(data => data.id === parseInt(id));\n    todosList[index].active = true\n    setTodos([...todosList]);\n  }\n\n  const startCount = (id) => {\n    const filteredData = todos.filter(item => item.id === parseInt(id));\n    setTempItem(filteredData[0])\n  }\n\n  const todoStateChange = (event) => {\n    let todosList = todos;\n    const index = todos.findIndex(data => data.id === parseInt(event.target.id));\n    if (todosList[index].active) {\n      todosList[index].active = false\n    } else {\n      todosList[index].active = true\n    }\n    setTodos([...todosList]);\n  }\n  \n  return (\n    <div className=\"container-fluid overflow-hidden h-md-100vh\">\n      <div className=\"row gx-5 h-100\">\n        <div className=\"col-md-1 text-white order-1 bg-md-secondary bg-dark py-md-5 py-3 d-flex justify-content-center align-items-md-end\">\n          <h1 className=\"title mb-0\">POMODORO</h1>\n        </div>\n        <div className=\"col-md-5 order-md-2 order-3 bg-dark d-flex align-items-center\">\n          <Todo todos={todos} onStateChange={todoStateChange} onAddTodoItem={addTodo} onStartCount={startCount} nowItem={tempItem} />\n        </div>\n        <div className=\"col-md-6 order-md-3 order-2 bg-secondary py-md-0 py-5\">\n          <CountDown nowItem={tempItem} complete={finishTodo} reStart={() => {\n            setTempItem({\n              id: 0,\n              text: '請先選擇一個待辦事項',\n              active: false,\n            })\n          }} />\n        </div>\n      </div>\n    </div>  \n  )\n}\n\nexport default Home;\n","// import logo from './logo.svg';\nimport React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Home from './view/Home/Home';\nimport './assets/stylesheets/all.scss';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" component={Home} />\n    </BrowserRouter>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}